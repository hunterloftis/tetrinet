extends ../layouts/layout

append styles
  link(rel='stylesheet', href='/styles/board.css' )

append scripts
  script(src="/js/lib/jquery-1.7.1.min.js")
  script(src="/js/lib/underscore.js")
  script(src="/js/lib/knockout-2.0.0.js")
  script(src='/js/tetris_client.js')
  script(src="/js/boardVM.js")
  script

    var TetrisClient = require('./tetris_client');
    var client = new TetrisClient();
    var BoardVM;

    client.connect('ws://localhost:4001', function(id) {
      BoardVM = new Board({player:game.players[0]});
    });

    

    $(function(){
      //ko.applyBindings(BoardVM);

      var lastkeypress = 0;
      var ts = new Date().getTime();
      var timesince = ts - lastkeypress;
      var should_trigger = (timesince > 5);

      $("body").keydown(function(e) {
        if(should_trigger) {

          switch(e.keyCode) {
            // P, Enter
            case 80:
            case 13:
              BoardVM.toggle();
              break;
            // space
            case 32:
              BoardVM.drop();
              break;
            // left
            case 37:
              BoardVM.left();
              break;
            //right
            case 39:
              BoardVM.right();
              break;
            // down
            case 40:
              BoardVM.down();
              break;
            // up
            case 38:
              BoardVM.rotate();
              break;
          }

        }
        lastkeypress = ts;
      });
    })


block content
  #overlay(data-bind="visible:(!started())")
    button.button#start_game(data-bind="click:start") PLAY
      span (P or Enter)
  #score 
    p.current SCORE: 
      span(data-bind="html:score")
    p.high HIGH SCORE: 
      span(data-bind="html:high_score")
  #board(data-bind="foreach:rows")
    #next_block(data-bind="html:$parent.next_block")
    #game_over(data-bind="visible:$parent.game_over") 
      h2 GAME OVER
    // ko foreach:$data
    .block(data-bind="css:{on:on, red:(color() == 'red'), blue:(color() == 'blue'), green:(color() == 'green'), purple:(color() == 'purple'), orange:(color() == 'orange'), yellow:(color() == 'yellow'), dark:(color() == 'dark')}")
    // /ko

