extends ../layouts/layout

append styles
  link(rel='stylesheet', href='/styles/board.css' )

append scripts
  script(src="/js/lib/jquery-1.7.1.min.js")
  script(src="/js/lib/underscore.js")
  script(src="/js/lib/knockout-2.0.0.js")
  script(src='/js/tetris_game.js')
  script(src="/js/boardVM.js")
  script

    var TetrisGame = require('./tetris_game');
    var game = new TetrisGame();
    var BoardVM = new Board({player:game.players[0]});

    $(function(){
      ko.applyBindings(BoardVM);

      BoardVM.move_block();

      var lastkeypress = 0;
      var ts = new Date().getTime();
      var timesince = ts - lastkeypress;
      var should_trigger = (timesince > 10);

      $("body").keydown(function(e) {
        if(should_trigger) {

          switch(e.keyCode) {
            // space
            case 32:
              BoardVM.drop();
              break;
            // left
            case 37:
              BoardVM.left();
              break;
            //right
            case 39:
              BoardVM.right();
              break;
            // down
            case 40:
              BoardVM.down();
              break;
            // up
            case 38:
              BoardVM.rotate();
              break;
          }

        }
        lastkeypress = ts;
      });
    })


    function randomBlock() {
      var rows = BoardVM.rows();
      var random_row = Math.floor(Math.random()*(BoardVM.height()));
      var random_col = Math.floor(Math.random()*(BoardVM.width()));
      var block = rows[random_row][random_col];
      var status = block.on();

      block.random_color();
      block.on(!status);

      setTimeout(function(){
        if (started) randomBlock();
      }, 1)
      
    }


block content
  #score 
    p.current SCORE: 
      span(data-bind="html:score")
    p.high HIGH SCORE: 
      span(data-bind="html:high_score")
  #board(data-bind="foreach:rows")
    #next_block(data-bind="html:$parent.next_block")
    #game_over(data-bind="visible:$parent.game_over") 
      h2 GAME OVER
    // ko foreach:$data
    .block(data-bind="css:{on:on, red:(color() == 'red'), blue:(color() == 'blue'), green:(color() == 'green'), purple:(color() == 'purple'), orange:(color() == 'orange'), yellow:(color() == 'yellow')}")
    // /ko

